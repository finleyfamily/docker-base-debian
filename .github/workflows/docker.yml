name: Docker

concurrency:
  group: queue

on:
  workflow_call:
    inputs:
      file:
        default: Dockerfile
        description: Path to Dockerfile to build.
        required: false
        type: string
      image-name:
        default: ghcr.io/${{ github.repository }}
        type: string
      image-platforms:
        default: linux/amd64, linux/arm64, linux/arm/v7
        description: List of target platforms for build.
        required: false
        type: string
      push-image:
        default: true
        description: Whether to push the image after it has been built.
        required: false
        type: boolean

jobs:
  changes:
    outputs:
      image: ${{ steps.changes.outputs.image }}
    permissions:
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: ℹ️ Determine file changes
        id: changes
        uses: dorny/paths-filter@v3.0.2
        with:
          filters: |
            image:
              - .github/workflows/docker.yml
              - Dockerfile
              - rootfs/**
  information:
    if: needs.changes.outputs.image == 'true'
    name: ℹ️ Gather information
    needs:
      - changes
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.release.outputs.environment }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: ℹ️ Gather version and environment
        id: release
        run: |
          sha="${{ github.sha }}"
          environment="edge"
          version="${sha:0:7}"
          if [[ "${{ github.event_name }}" = "release" ]]; then
            version="${{ github.event.release.tag_name }}"
            version="${version,,}"
            environment="latest"
            if [[ "${{ github.event.release.prerelease }}" = "true" ]]; then
              environment="beta"
            fi
          fi

          echo "environment=${environment}" >> "$GITHUB_OUTPUT"
          echo "version=${version}" >> "$GITHUB_OUTPUT"
  build:
    if: needs.changes.outputs.image == 'true'
    name: 👷 Build & Deploy
    needs:
      - changes
      - information
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🏗 Set up QEMU
        uses: docker/setup-qemu-action@v3.3.0
      - name: 🏗 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0
      - name: 🏗  Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 👓 Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          annotations: |
            manifest:org.opencontainers.image.authors=Kyle Finley <kyle@finley.sh>
            index:org.opencontainers.image.authors=Kyle Finley <kyle@finley.sh>
            manifest:org.opencontainers.image.documentation=${{ github.repositoryUrl }}
            index=org.opencontainers.image.documentation=${{ github.repositoryUrl }}
          images: ${{ inputs.image-name }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=pr
            type=semver,pattern={{raw}}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
      - name: 🚀 Build
        uses: docker/build-push-action@v6.13.0
        with:
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: ${{ inputs.file }}
          platforms: ${{ inputs.image-platforms }}
          push: ${{ inputs.push-image }}
          tags: ${{ steps.meta.outputs.tags }}
